/*
 * ClientGUI.java
 *
 * Created on 7. Juni 2001, 21:17
 */

package GUI.ClientGUI;

import Client.Client;
import java.util.Vector;
import java.util.Enumeration;
import Util.Debug.Debug;

public class ClientGUI extends java.applet.Applet implements GUI.GUI {
    java.awt.CardLayout cardLayout = new java.awt.CardLayout();
    Client client = new Client();

    public synchronized void loginError(){
      this.cardLayout.first(mainpanel);

    }

    public synchronized void setCurrentChannelData(String name, Vector userNames){
      this.channelChoice.select(name);
      this.userList.removeAll();
      Enumeration enum;
              if (userNames != null) {
            enum = userNames.elements();
        }
        else {
            enum = (
                new Vector()).elements();
        }
             this.userList.add("Alle");

      while (enum.hasMoreElements()){
       this.userList.select(0);
       this.userList.add((String)enum.nextElement());
      }
    }

    public synchronized void sendMsgFromChannel(String fromName,String msg){
     this.chatText.append(fromName+": "+msg+"\n");
     this.chatText.setCaretPosition(this.chatText.getText().length());
    }

    public synchronized void sendMsgFromUser(String fromName,String msg){
     this.chatText.append(fromName+" flüstert: "+msg+"\n");
     this.chatText.setCaretPosition(this.chatText.getText().length());

    }

    public synchronized void setCurrentUserData(String name, Vector channelNames) {
        Enumeration enum;
        String tmpName;
        this.channelChoice.removeAll();
        if (channelNames != null) {
            enum = channelNames.elements();
        }
        else {
            enum = (
                new Vector()).elements();
        }
        while (enum.hasMoreElements()) {
            tmpName=(String)enum.nextElement();
            this.channelChoice.add(tmpName);
            Debug.println(tmpName+" added to channelist");
        }
    }

    /** initialisiert die GUI */
    public void init() {
        this.client.SERVER_IP=this.getCodeBase().getHost();
        Debug.println("host set to"+this.client.SERVER_IP);
        this.client.gui = this;
        initComponents();
    }

    /**
     * This method is called from within the init() method to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always regenerated by the FormEditor.
     */
    private void initComponents() { //GEN-BEGIN:initComponents
        mainpanel = new java.awt.Panel();
        loginpanel = new java.awt.Panel();
        loginName = new java.awt.TextField();
        password = new java.awt.TextField();
        loginNameLabel = new java.awt.Label();
        passwordLabel = new java.awt.Label();
        isGuest = new java.awt.Checkbox();
        login = new java.awt.Button();
        chatpanel = new java.awt.Panel();
        chatText = new java.awt.TextArea();
        msg = new java.awt.TextField();
        sendMsg = new java.awt.Button();
        channelChoice = new java.awt.Choice();
        channelChoiceLabel = new java.awt.Label();
        userList = new java.awt.List();
        userListLabel = new java.awt.Label();
        setLayout(
            new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        mainpanel.setLayout(cardLayout);
        mainpanel.setFont(
            new java.awt.Font("Arial", 0, 10));
        mainpanel.setName("mainpanel");
        mainpanel.setBackground(
            new java.awt.Color(204, 204, 204));
        mainpanel.setForeground(java.awt.Color.black);
        loginpanel.setLayout(
            new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints2;
        loginpanel.setFont(
            new java.awt.Font("Dialog", 0, 11));
        loginpanel.setName("loginpanel");
        loginpanel.setBackground(
            new java.awt.Color(153, 153, 153));
        loginpanel.setForeground(java.awt.Color.black);
        loginName.setBackground(java.awt.Color.white);
        loginName.setName("loginName");
        loginName.setFont(
            new java.awt.Font("Dialog", 0, 11));
        loginName.setColumns(20);
        loginName.setForeground(java.awt.Color.black);
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 1;
        gridBagConstraints2.gridy = 0;
        loginpanel.add(loginName, gridBagConstraints2);
        password.setBackground(java.awt.Color.white);
        password.setName("password");
        password.setFont(
            new java.awt.Font("Dialog", 0, 11));
        password.setEchoChar('*');
        password.setColumns(20);
        password.setForeground(java.awt.Color.black);
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 1;
        gridBagConstraints2.gridy = 1;
        gridBagConstraints2.insets = new java.awt.Insets(10, 0, 0, 0);
        loginpanel.add(password, gridBagConstraints2);
        loginNameLabel.setFont(
            new java.awt.Font("Dialog", 0, 11));
        loginNameLabel.setName("loginNameLabel");
        loginNameLabel.setBackground(
            new java.awt.Color(153, 153, 153));
        loginNameLabel.setForeground(java.awt.Color.black);
        loginNameLabel.setText("Loginname:");
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 0;
        gridBagConstraints2.gridy = 0;
        gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
        loginpanel.add(loginNameLabel, gridBagConstraints2);
        passwordLabel.setFont(
            new java.awt.Font("Dialog", 0, 11));
        passwordLabel.setName("passwordLabel");
        passwordLabel.setBackground(
            new java.awt.Color(153, 153, 153));
        passwordLabel.setForeground(java.awt.Color.black);
        passwordLabel.setText("Passwort:");
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 0;
        gridBagConstraints2.gridy = 1;
        gridBagConstraints2.insets = new java.awt.Insets(10, 0, 0, 0);
        loginpanel.add(passwordLabel, gridBagConstraints2);
        isGuest.setBackground(
            new java.awt.Color(153, 153, 153));
        isGuest.setName("isGuest");
        isGuest.setFont(
            new java.awt.Font("Dialog", 0, 11));
        isGuest.setForeground(java.awt.Color.black);
        isGuest.setLabel("Gast");
        isGuest.addItemListener(
            new java.awt.event.ItemListener() {
                public void itemStateChanged(java.awt.event.ItemEvent evt) {
                    isGuestItemStateChanged(evt);
                }
            });
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 2;
        gridBagConstraints2.gridy = 0;
        gridBagConstraints2.insets = new java.awt.Insets(0, 10, 0, 0);
        loginpanel.add(isGuest, gridBagConstraints2);
        login.setFont(
            new java.awt.Font("Dialog", 0, 11));
        login.setLabel("Login");
        login.setName("login");
        login.setBackground(java.awt.Color.lightGray);
        login.setForeground(java.awt.Color.black);
        login.addMouseListener(
            new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    loginMouseClicked(evt);
                }
            });
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 1;
        gridBagConstraints2.gridy = 2;
        gridBagConstraints2.insets = new java.awt.Insets(10, 0, 0, 0);
        loginpanel.add(login, gridBagConstraints2);
        mainpanel.add(loginpanel, "card1");
        chatpanel.setLayout(
            new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints3;
        chatpanel.setFont(
            new java.awt.Font("Dialog", 0, 11));
        chatpanel.setName("chatpanel");
        chatpanel.setBackground(
            new java.awt.Color(153, 153, 153));
        chatpanel.setForeground(java.awt.Color.black);
        chatText.setBackground(java.awt.Color.lightGray);
        chatText.setName("chatText");
        chatText.setEditable(false);
        chatText.setFont(
            new java.awt.Font("Dialog", 0, 11));
        chatText.setColumns(70);
        chatText.setForeground(java.awt.Color.black);
        chatText.setRows(30);
        gridBagConstraints3 = new java.awt.GridBagConstraints();
        gridBagConstraints3.gridx = 0;
        gridBagConstraints3.gridy = 1;
        gridBagConstraints3.gridwidth = 2;
        gridBagConstraints3.gridheight = 2;
        chatpanel.add(chatText, gridBagConstraints3);
        msg.setBackground(java.awt.Color.white);
        msg.setName("msg");
        msg.setFont(
            new java.awt.Font("Dialog", 0, 11));
        msg.setColumns(70);
        msg.setForeground(java.awt.Color.black);
        gridBagConstraints3 = new java.awt.GridBagConstraints();
        gridBagConstraints3.gridx = 0;
        gridBagConstraints3.gridy = 3;
        gridBagConstraints3.gridwidth = 2;
        gridBagConstraints3.insets = new java.awt.Insets(10, 0, 0, 0);
        gridBagConstraints3.weightx = 1.0;
        chatpanel.add(msg, gridBagConstraints3);
        sendMsg.setFont(
            new java.awt.Font("Dialog", 0, 11));
        sendMsg.setLabel("Nachricht senden");
        sendMsg.setName("sendMsg");
        sendMsg.setBackground(java.awt.Color.lightGray);
        sendMsg.setForeground(java.awt.Color.black);
        sendMsg.addMouseListener(
            new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    sendMsgMouseClicked(evt);
                }
            });
        gridBagConstraints3 = new java.awt.GridBagConstraints();
        gridBagConstraints3.gridx = 2;
        gridBagConstraints3.gridy = 3;
        gridBagConstraints3.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints3.insets = new java.awt.Insets(10, 10, 0, 0);
        chatpanel.add(sendMsg, gridBagConstraints3);
        channelChoice.setFont(
            new java.awt.Font("Dialog", 0, 11));
        channelChoice.setName("channelChoice");
        channelChoice.setBackground(java.awt.Color.white);
        channelChoice.setForeground(java.awt.Color.black);
        channelChoice.addItemListener(
            new java.awt.event.ItemListener() {
                public void itemStateChanged(java.awt.event.ItemEvent evt) {
                    channelChoiceItemStateChanged(evt);
                }
            });
        gridBagConstraints3 = new java.awt.GridBagConstraints();
        gridBagConstraints3.gridx = 1;
        gridBagConstraints3.gridy = 0;
        gridBagConstraints3.insets = new java.awt.Insets(0, 10, 10, 0);
        chatpanel.add(channelChoice, gridBagConstraints3);
        channelChoiceLabel.setFont(
            new java.awt.Font("Dialog", 0, 11));
        channelChoiceLabel.setName("channelChoiceLabel");
        channelChoiceLabel.setBackground(
            new java.awt.Color(153, 153, 153));
        channelChoiceLabel.setForeground(java.awt.Color.black);
        channelChoiceLabel.setText("Channel:");
        gridBagConstraints3 = new java.awt.GridBagConstraints();
        gridBagConstraints3.gridx = 0;
        gridBagConstraints3.gridy = 0;
        gridBagConstraints3.insets = new java.awt.Insets(0, 0, 10, 0);
        gridBagConstraints3.anchor = java.awt.GridBagConstraints.EAST;
        chatpanel.add(channelChoiceLabel, gridBagConstraints3);
        userList.setFont(
            new java.awt.Font("Dialog", 0, 11));
        userList.setName("userList");
        userList.setBackground(java.awt.Color.white);
        userList.setForeground(java.awt.Color.black);
        gridBagConstraints3 = new java.awt.GridBagConstraints();
        gridBagConstraints3.gridx = 2;
        gridBagConstraints3.gridy = 2;
        gridBagConstraints3.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints3.insets = new java.awt.Insets(0, 10, 0, 0);
        gridBagConstraints3.weighty = 1.0;
        chatpanel.add(userList, gridBagConstraints3);
        userListLabel.setFont(
            new java.awt.Font("Dialog", 0, 11));
        userListLabel.setName("userListLabel");
        userListLabel.setBackground(
            new java.awt.Color(153, 153, 153));
        userListLabel.setForeground(java.awt.Color.black);
        userListLabel.setText("Empf\u00e4nger:");
        gridBagConstraints3 = new java.awt.GridBagConstraints();
        gridBagConstraints3.gridx = 2;
        gridBagConstraints3.gridy = 1;
        gridBagConstraints3.insets = new java.awt.Insets(0, 10, 0, 0);
        chatpanel.add(userListLabel, gridBagConstraints3);
        mainpanel.add(chatpanel, "card2");
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        add(mainpanel, gridBagConstraints1);
    } //GEN-END:initComponents

    private void channelChoiceItemStateChanged(java.awt.event.ItemEvent evt) { //GEN-FIRST:event_channelChoiceItemStateChanged
      this.client.joinChannel(this.channelChoice.getSelectedItem());
    } //GEN-LAST:event_channelChoiceItemStateChanged

    private void sendMsgMouseClicked(java.awt.event.MouseEvent evt) { //GEN-FIRST:event_sendMsgMouseClicked
     if(this.userList.getSelectedItem().compareTo("Alle")==0){
      this.client.sendMsgToChannel(this.msg.getText());
     }
     else{
      this.client.sendMsgToUser(this.userList.getSelectedItem(),this.msg.getText());
      this.userList.select(0);
     }
     this.msg.setText("");

    } //GEN-LAST:event_sendMsgMouseClicked

    private void loginMouseClicked(java.awt.event.MouseEvent evt) { //GEN-FIRST:event_loginMouseClicked
        this.client.startClient();
        if (isGuest.getState()) {
            this.client.loginAsGuest(this.loginName.getText());
        }
        else {
            this.client.login(this.loginName.getText(), this.password.getText());
        }
        this.client.joinChannel("Foyer");
        cardLayout.next(mainpanel);
    } //GEN-LAST:event_loginMouseClicked

    private void isGuestItemStateChanged(java.awt.event.ItemEvent evt) { //GEN-FIRST:event_isGuestItemStateChanged
        if (isGuest.getState()) {
            this.password.setEnabled(false);
        }
        else {
            this.password.setEnabled(true);
        }
    } //GEN-LAST:event_isGuestItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Panel mainpanel;
    private java.awt.Panel loginpanel;
    private java.awt.TextField loginName;
    private java.awt.TextField password;
    private java.awt.Label loginNameLabel;
    private java.awt.Label passwordLabel;
    private java.awt.Checkbox isGuest;
    private java.awt.Button login;
    private java.awt.Panel chatpanel;
    private java.awt.TextArea chatText;
    private java.awt.TextField msg;
    private java.awt.Button sendMsg;
    private java.awt.Choice channelChoice;
    private java.awt.Label channelChoiceLabel;
    private java.awt.List userList;
    private java.awt.Label userListLabel;
    // End of variables declaration//GEN-END:variables
}
