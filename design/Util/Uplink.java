/* Generated by Together */

package Util;
import java.net.Socket;

/**
 * Versendet Nachrichten über einen Socket an einen Downlink. 
 * Diese Klasse ist die sendende Hälfte eines Kommunikationskanals. Die andere
 * Hälfte, die das Empfangen von Nachrichten übernimmt, ist der Downlink.
 * Diese Klasse wird z.B. vom Client benutzt, um Nachrichten an seinen
 * ClientServant zu senden.
 *
 * @see Util.Downlink
 * @see Client.Client
 * @see Server.ClientServant
 */
public class Uplink {
    
    /**
     * Konstruktor.
     * @param socket der zu benutzende Socket.
     */
    public Uplink(Socket socket) {
    }

    /**
     * Über diesen Socket werden die Nachrichten versendet.
     */
    private Socket socket;

    /**
     * Öffnet den Output-Stream.
     */
    public void startUplink() {
    }

    /**
     * Schließt den Output-Stream.
     */
    public void stopUplink() {
    }

    /**
     * Sendet eine Nachricht über den Socket. Sie wird am anderen Ende des
     * Kommunikationskanals von einem Downlink empfangen.
     *
     * @param msg Die zu versendende Nachricht.
     * @see Dowlink
     */
    // FIXME: In Client.Uplink hieß diese Methode sendMsg(String msg),
    // alle Client-Klassen durchgehen und zu send(String msg) korrigieren! 
    public void send(String msg) {
    }
}
