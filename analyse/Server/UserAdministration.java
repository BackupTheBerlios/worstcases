/* Generated by Together */

package Server;

import java.util.Vector;
/**
 * verwaltet die Benutzer 
 */
class UserAdministration {
    public UserAdministration(DataBaseIO paramDataBaseIO) {
    }

    /**
     * meldet einen Benutzer an
     * @return den Benutzer, falls Authentifizierung klappt, sonst null 
     */
    public User loginUser(String userSet) {
        return null;
    }

    public User loginGuest(String guestSet) {
        return null;
    }

    /**
     * fügt einen Benutzer hinzu 
     */
    public void addToUserList(User paramUser) {
    }

    /**
     * entfernt einen Benutzer 
     */
    public void removeFromUserList(User paramUser) {
      paramUser.getClientServant().stopClientServant();
      this.userList.remove(paramUser);
    }

    /**
     * gibt den Benutzer mit dem angegebenen Namen zurück 
     */
    public User getFromUserListByName(String name) {
        return null;
    }

    public java.util.Vector getUserList(){
            return userList;
        }

    public void setUserList(Vector userList){
            this.userList = userList;
        }



    /**
     *@link aggregation
     *     @associates <{User}>
     * @clientCardinality 1
     * @supplierCardinality 0..*
     */
    private Vector userList;

    /**
     * Anzahl der eingeloggten Benutzer(registrierte und Gäste)  im System 
     */
    private int numCurrentUsers;

    /**
     * maximale Anzahl von eingeloggten Benutzern im System 
     */
    private int maxUsers;

    /**
     * @clientCardinality 1
     * @supplierCardinality 1 
     */
    private DataBaseIO dataBaseIO;
}
